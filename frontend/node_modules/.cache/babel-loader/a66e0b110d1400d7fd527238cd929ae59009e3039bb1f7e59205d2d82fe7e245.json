{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getHeroes, getHeroById, removeHeroById, updateHero } from \"./operations\";\nconst handlePending = state => {\n  state.products = [];\n  state.isLoading = true;\n};\nconst handleRejected = (state, action) => {\n  state.isLoading = false;\n  state.error = action.payload;\n};\nconst initialState = {\n  items: [],\n  totalHeroes: null,\n  isLoading: false,\n  error: null\n};\nconst heroesSlice = createSlice({\n  name: \"heroes\",\n  initialState,\n  reducers: {\n    clearItems: state => {\n      state.items = [];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getHeroes.pending, handlePending).addCase(getHeroes.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = null;\n      state.items = action.payload.heroes;\n      if (!state.totalHeroes) {\n        state.totalHeroes = action.payload.totalHeroes;\n      }\n    }).addCase(getHeroes.rejected, handleRejected).addCase(getHeroById.pending, handlePending).addCase(getHeroById.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = null;\n      state.items = [action.payload];\n    }).addCase(getHeroById.rejected, handleRejected).addCase(removeHeroById.pending, handlePending).addCase(removeHeroById.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = null;\n      state.items = [action.payload];\n    }).addCase(removeHeroById.rejected, handleRejected).addCase(updateHero.pending, handlePending).addCase(updateHero.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = null;\n      state.items = [action.payload];\n    }).addCase(updateHero.rejected, handleRejected);\n  }\n});\nexport const {\n  clearItems\n} = heroesSlice.actions;\nexport const heroesReducer = heroesSlice.reducer;\n\n// import { useEffect, useState } from \"react\";\n// import { useParams, useNavigate } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { getHeroById } from \"../../redux/heroes/operations\";\n// import { selectHeroById } from \"../../redux/heroes/selectors\";\n// import Container from \"../Container/Container\";\n// import {\n//   FlexContainer,\n//   ImageBox,\n//   Image,\n//   ContentBox,\n//   Text,\n// } from \"./Details.styled\";\n// import Loader from \"../Loader/Loader\";\n// import {\n//   removeHeroById,\n//   getHeroes,\n//   updateHero,\n// } from \"../../redux/heroes/operations\";\n\n// const Details = () => {\n//   const { heroId } = useParams();\n//   const [isEdit, setIsEdit] = useState(false);\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const hero = useSelector((state) => selectHeroById(state, heroId));\n\n//   const [formData, setFormData] = useState({\n//     nickname: \"\",\n//     real_name: \"\",\n//     origin_description: \"\",\n//     superpowers: \"\",\n//     catch_phrase: \"\",\n//     images: \"\",\n//   });\n\n//   useEffect(() => {\n//     if (hero) {\n//       setFormData({\n//         nickname: hero.nickname,\n//         real_name: hero.real_name,\n//         origin_description: hero.origin_description,\n//         superpowers: hero.superpowers,\n//         catch_phrase: hero.catch_phrase,\n//         images: hero.images,\n//       });\n//     }\n//   }, [hero]);\n\n//   useEffect(() => {\n//     dispatch(getHeroById(heroId));\n//   }, [dispatch, heroId]);\n\n//   const handleRemoveClick = async () => {\n//     await dispatch(removeHeroById(heroId));\n//     await dispatch(getHeroes());\n//     navigate(\"/\");\n//   };\n\n//   const handleUpdateClick = () => {\n//     setIsEdit(true);\n//   };\n\n//   const handleSaveClick = () => {\n//     dispatch(updateHero({ id: heroId, formData }));\n//     console.log(heroId);\n//     console.log(formData);\n//     setIsEdit(false);\n//   };\n\n//   const handleChangeInputValue = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   return (\n//     <>\n//       {hero ? (\n//         <Container>\n//           <FlexContainer>\n//             {isEdit ? (\n//               <ImageBox>\n//                 <Image src={hero.images} alt={hero.nickname} />\n//                 <input type=\"file\" />\n//               </ImageBox>\n//             ) : (\n//               <ImageBox>\n//                 <Image src={hero.images} alt={hero.nickname} />\n//               </ImageBox>\n//             )}\n//             <ContentBox>\n//               <Text>\n//                 nickname:\n//                 {isEdit ? (\n//                   <input\n//                     onChange={handleChangeInputValue}\n//                     value={formData.nickname}\n//                     name=\"nickname\"\n//                     type=\"text\"\n//                   />\n//                 ) : (\n//                   <span>{hero.nickname}</span>\n//                 )}\n//               </Text>\n//               <Text>\n//                 real_name:\n//                 {isEdit ? (\n//                   <input\n//                     onChange={handleChangeInputValue}\n//                     value={formData.real_name}\n//                     name=\"real_name\"\n//                     type=\"text\"\n//                   />\n//                 ) : (\n//                   <span>{hero.real_name}</span>\n//                 )}\n//               </Text>\n//               <Text>\n//                 origin_description:\n//                 {isEdit ? (\n//                   <input\n//                     onChange={handleChangeInputValue}\n//                     type=\"text\"\n//                     value={formData.origin_description}\n//                     name=\"origin_description\"\n//                   />\n//                 ) : (\n//                   <span>{hero.origin_description}</span>\n//                 )}\n//               </Text>\n//               <Text>\n//                 superpowers:\n//                 {isEdit ? (\n//                   <input\n//                     onChange={handleChangeInputValue}\n//                     type=\"text\"\n//                     value={formData.superpowers}\n//                     name=\"superpowers\"\n//                   />\n//                 ) : (\n//                   <span>{hero.superpowers}</span>\n//                 )}\n//               </Text>\n//               <Text>\n//                 catch_phrase:\n//                 {isEdit ? (\n//                   <input\n//                     onChange={handleChangeInputValue}\n//                     type=\"text\"\n//                     value={formData.catch_phrase}\n//                     name=\"catch_phrase\"\n//                   />\n//                 ) : (\n//                   <span>{hero.catch_phrase}</span>\n//                 )}\n//               </Text>\n//               {isEdit ? (\n//                 <button onClick={handleSaveClick}>save</button>\n//               ) : (\n//                 <button onClick={handleUpdateClick}>edit</button>\n//               )}\n//               <button onClick={handleRemoveClick}>remove</button>\n//             </ContentBox>\n//           </FlexContainer>\n//         </Container>\n//       ) : (\n//         <Loader />\n//       )}\n//     </>\n//   );\n// };\n\n// export default Details;","map":{"version":3,"names":["createSlice","getHeroes","getHeroById","removeHeroById","updateHero","handlePending","state","products","isLoading","handleRejected","action","error","payload","initialState","items","totalHeroes","heroesSlice","name","reducers","clearItems","extraReducers","builder","addCase","pending","fulfilled","heroes","rejected","actions","heroesReducer","reducer"],"sources":["/Users/samiraesmailpur/Documents/GitHub/Superheroes/frontend/src/redux/heroes/heroesSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  getHeroes,\n  getHeroById,\n  removeHeroById,\n  updateHero,\n} from \"./operations\";\n\nconst handlePending = (state) => {\n  state.products = [];\n  state.isLoading = true;\n};\n\nconst handleRejected = (state, action) => {\n  state.isLoading = false;\n  state.error = action.payload;\n};\n\nconst initialState = {\n  items: [],\n  totalHeroes: null,\n  isLoading: false,\n  error: null,\n};\n\nconst heroesSlice = createSlice({\n  name: \"heroes\",\n  initialState,\n  reducers: {\n    clearItems: (state) => {\n      state.items = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHeroes.pending, handlePending)\n      .addCase(getHeroes.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.error = null;\n        state.items = action.payload.heroes;\n        if (!state.totalHeroes) {\n          state.totalHeroes = action.payload.totalHeroes;\n        }\n      })\n      .addCase(getHeroes.rejected, handleRejected)\n      .addCase(getHeroById.pending, handlePending)\n      .addCase(getHeroById.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.error = null;\n        state.items = [action.payload];\n      })\n      .addCase(getHeroById.rejected, handleRejected)\n      .addCase(removeHeroById.pending, handlePending)\n      .addCase(removeHeroById.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.error = null;\n        state.items = [action.payload];\n      })\n      .addCase(removeHeroById.rejected, handleRejected)\n      .addCase(updateHero.pending, handlePending)\n      .addCase(updateHero.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.error = null;\n        state.items = [action.payload];\n      })\n      .addCase(updateHero.rejected, handleRejected);\n  },\n});\n\nexport const { clearItems } = heroesSlice.actions;\nexport const heroesReducer = heroesSlice.reducer;\n\n// import { useEffect, useState } from \"react\";\n// import { useParams, useNavigate } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { getHeroById } from \"../../redux/heroes/operations\";\n// import { selectHeroById } from \"../../redux/heroes/selectors\";\n// import Container from \"../Container/Container\";\n// import {\n//   FlexContainer,\n//   ImageBox,\n//   Image,\n//   ContentBox,\n//   Text,\n// } from \"./Details.styled\";\n// import Loader from \"../Loader/Loader\";\n// import {\n//   removeHeroById,\n//   getHeroes,\n//   updateHero,\n// } from \"../../redux/heroes/operations\";\n\n// const Details = () => {\n//   const { heroId } = useParams();\n//   const [isEdit, setIsEdit] = useState(false);\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const hero = useSelector((state) => selectHeroById(state, heroId));\n\n//   const [formData, setFormData] = useState({\n//     nickname: \"\",\n//     real_name: \"\",\n//     origin_description: \"\",\n//     superpowers: \"\",\n//     catch_phrase: \"\",\n//     images: \"\",\n//   });\n\n//   useEffect(() => {\n//     if (hero) {\n//       setFormData({\n//         nickname: hero.nickname,\n//         real_name: hero.real_name,\n//         origin_description: hero.origin_description,\n//         superpowers: hero.superpowers,\n//         catch_phrase: hero.catch_phrase,\n//         images: hero.images,\n//       });\n//     }\n//   }, [hero]);\n\n//   useEffect(() => {\n//     dispatch(getHeroById(heroId));\n//   }, [dispatch, heroId]);\n\n//   const handleRemoveClick = async () => {\n//     await dispatch(removeHeroById(heroId));\n//     await dispatch(getHeroes());\n//     navigate(\"/\");\n//   };\n\n//   const handleUpdateClick = () => {\n//     setIsEdit(true);\n//   };\n\n//   const handleSaveClick = () => {\n//     dispatch(updateHero({ id: heroId, formData }));\n//     console.log(heroId);\n//     console.log(formData);\n//     setIsEdit(false);\n//   };\n\n//   const handleChangeInputValue = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   return (\n//     <>\n//       {hero ? (\n//         <Container>\n//           <FlexContainer>\n//             {isEdit ? (\n//               <ImageBox>\n//                 <Image src={hero.images} alt={hero.nickname} />\n//                 <input type=\"file\" />\n//               </ImageBox>\n//             ) : (\n//               <ImageBox>\n//                 <Image src={hero.images} alt={hero.nickname} />\n//               </ImageBox>\n//             )}\n//             <ContentBox>\n//               <Text>\n//                 nickname:\n//                 {isEdit ? (\n//                   <input\n//                     onChange={handleChangeInputValue}\n//                     value={formData.nickname}\n//                     name=\"nickname\"\n//                     type=\"text\"\n//                   />\n//                 ) : (\n//                   <span>{hero.nickname}</span>\n//                 )}\n//               </Text>\n//               <Text>\n//                 real_name:\n//                 {isEdit ? (\n//                   <input\n//                     onChange={handleChangeInputValue}\n//                     value={formData.real_name}\n//                     name=\"real_name\"\n//                     type=\"text\"\n//                   />\n//                 ) : (\n//                   <span>{hero.real_name}</span>\n//                 )}\n//               </Text>\n//               <Text>\n//                 origin_description:\n//                 {isEdit ? (\n//                   <input\n//                     onChange={handleChangeInputValue}\n//                     type=\"text\"\n//                     value={formData.origin_description}\n//                     name=\"origin_description\"\n//                   />\n//                 ) : (\n//                   <span>{hero.origin_description}</span>\n//                 )}\n//               </Text>\n//               <Text>\n//                 superpowers:\n//                 {isEdit ? (\n//                   <input\n//                     onChange={handleChangeInputValue}\n//                     type=\"text\"\n//                     value={formData.superpowers}\n//                     name=\"superpowers\"\n//                   />\n//                 ) : (\n//                   <span>{hero.superpowers}</span>\n//                 )}\n//               </Text>\n//               <Text>\n//                 catch_phrase:\n//                 {isEdit ? (\n//                   <input\n//                     onChange={handleChangeInputValue}\n//                     type=\"text\"\n//                     value={formData.catch_phrase}\n//                     name=\"catch_phrase\"\n//                   />\n//                 ) : (\n//                   <span>{hero.catch_phrase}</span>\n//                 )}\n//               </Text>\n//               {isEdit ? (\n//                 <button onClick={handleSaveClick}>save</button>\n//               ) : (\n//                 <button onClick={handleUpdateClick}>edit</button>\n//               )}\n//               <button onClick={handleRemoveClick}>remove</button>\n//             </ContentBox>\n//           </FlexContainer>\n//         </Container>\n//       ) : (\n//         <Loader />\n//       )}\n//     </>\n//   );\n// };\n\n// export default Details;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,SAAS,EACTC,WAAW,EACXC,cAAc,EACdC,UAAU,QACL,cAAc;AAErB,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/BA,KAAK,CAACC,QAAQ,GAAG,EAAE;EACnBD,KAAK,CAACE,SAAS,GAAG,IAAI;AACxB,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACH,KAAK,EAAEI,MAAM,KAAK;EACxCJ,KAAK,CAACE,SAAS,GAAG,KAAK;EACvBF,KAAK,CAACK,KAAK,GAAGD,MAAM,CAACE,OAAO;AAC9B,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,IAAI;EACjBP,SAAS,EAAE,KAAK;EAChBG,KAAK,EAAE;AACT,CAAC;AAED,MAAMK,WAAW,GAAGhB,WAAW,CAAC;EAC9BiB,IAAI,EAAE,QAAQ;EACdJ,YAAY;EACZK,QAAQ,EAAE;IACRC,UAAU,EAAGb,KAAK,IAAK;MACrBA,KAAK,CAACQ,KAAK,GAAG,EAAE;IAClB;EACF,CAAC;EACDM,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACrB,SAAS,CAACsB,OAAO,EAAElB,aAAa,CAAC,CACzCiB,OAAO,CAACrB,SAAS,CAACuB,SAAS,EAAE,CAAClB,KAAK,EAAEI,MAAM,KAAK;MAC/CJ,KAAK,CAACE,SAAS,GAAG,KAAK;MACvBF,KAAK,CAACK,KAAK,GAAG,IAAI;MAClBL,KAAK,CAACQ,KAAK,GAAGJ,MAAM,CAACE,OAAO,CAACa,MAAM;MACnC,IAAI,CAACnB,KAAK,CAACS,WAAW,EAAE;QACtBT,KAAK,CAACS,WAAW,GAAGL,MAAM,CAACE,OAAO,CAACG,WAAW;MAChD;IACF,CAAC,CAAC,CACDO,OAAO,CAACrB,SAAS,CAACyB,QAAQ,EAAEjB,cAAc,CAAC,CAC3Ca,OAAO,CAACpB,WAAW,CAACqB,OAAO,EAAElB,aAAa,CAAC,CAC3CiB,OAAO,CAACpB,WAAW,CAACsB,SAAS,EAAE,CAAClB,KAAK,EAAEI,MAAM,KAAK;MACjDJ,KAAK,CAACE,SAAS,GAAG,KAAK;MACvBF,KAAK,CAACK,KAAK,GAAG,IAAI;MAClBL,KAAK,CAACQ,KAAK,GAAG,CAACJ,MAAM,CAACE,OAAO,CAAC;IAChC,CAAC,CAAC,CACDU,OAAO,CAACpB,WAAW,CAACwB,QAAQ,EAAEjB,cAAc,CAAC,CAC7Ca,OAAO,CAACnB,cAAc,CAACoB,OAAO,EAAElB,aAAa,CAAC,CAC9CiB,OAAO,CAACnB,cAAc,CAACqB,SAAS,EAAE,CAAClB,KAAK,EAAEI,MAAM,KAAK;MACpDJ,KAAK,CAACE,SAAS,GAAG,KAAK;MACvBF,KAAK,CAACK,KAAK,GAAG,IAAI;MAClBL,KAAK,CAACQ,KAAK,GAAG,CAACJ,MAAM,CAACE,OAAO,CAAC;IAChC,CAAC,CAAC,CACDU,OAAO,CAACnB,cAAc,CAACuB,QAAQ,EAAEjB,cAAc,CAAC,CAChDa,OAAO,CAAClB,UAAU,CAACmB,OAAO,EAAElB,aAAa,CAAC,CAC1CiB,OAAO,CAAClB,UAAU,CAACoB,SAAS,EAAE,CAAClB,KAAK,EAAEI,MAAM,KAAK;MAChDJ,KAAK,CAACE,SAAS,GAAG,KAAK;MACvBF,KAAK,CAACK,KAAK,GAAG,IAAI;MAClBL,KAAK,CAACQ,KAAK,GAAG,CAACJ,MAAM,CAACE,OAAO,CAAC;IAChC,CAAC,CAAC,CACDU,OAAO,CAAClB,UAAU,CAACsB,QAAQ,EAAEjB,cAAc,CAAC;EACjD;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEU;AAAW,CAAC,GAAGH,WAAW,CAACW,OAAO;AACjD,OAAO,MAAMC,aAAa,GAAGZ,WAAW,CAACa,OAAO;;AAEh},"metadata":{},"sourceType":"module","externalDependencies":[]}