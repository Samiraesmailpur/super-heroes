{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getHeroes } from \"./operations\";\nconst handlePending = state => {\n  state.products = [];\n  state.isLoading = true;\n};\nconst handleRejected = (state, action) => {\n  state.isLoading = false;\n  state.error = action.payload;\n};\nconst initialState = {\n  items: [],\n  totalProducts: null,\n  isLoading: false,\n  error: null\n};\nconst heroesSlice = createSlice({\n  name: \"heroes\",\n  initialState,\n  reducers: {\n    clearItems: state => {\n      state.items = [];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getHeroes.pending, handlePending).addCase(getHeroes.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = null;\n      state.items = [...state.items, ...action.payload.products];\n      // Check if totalProducts is not already set, if not set it\n      if (!state.totalProducts) {\n        state.totalProducts = action.payload.totalProducts;\n      }\n    }).addCase(getHeroes.rejected, handleRejected);\n  }\n});\nexport const {\n  clearItems\n} = heroesSlice.actions;\nexport const heroesReducer = heroesSlice.reducer;","map":{"version":3,"names":["createSlice","getHeroes","handlePending","state","products","isLoading","handleRejected","action","error","payload","initialState","items","totalProducts","heroesSlice","name","reducers","clearItems","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","heroesReducer","reducer"],"sources":["/Users/samiraesmailpur/Documents/GitHub/Superheroes/frontend/src/redux/heroes/heroesSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { getHeroes } from \"./operations\";\n\nconst handlePending = (state) => {\n  state.products = [];\n  state.isLoading = true;\n};\n\nconst handleRejected = (state, action) => {\n  state.isLoading = false;\n  state.error = action.payload;\n};\n\nconst initialState = {\n  items: [],\n  totalProducts: null,\n  isLoading: false,\n  error: null,\n};\n\nconst heroesSlice = createSlice({\n  name: \"heroes\",\n  initialState,\n  reducers: {\n    clearItems: (state) => {\n      state.items = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHeroes.pending, handlePending)\n      .addCase(getHeroes.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.error = null;\n        state.items = [...state.items, ...action.payload.products];\n        // Check if totalProducts is not already set, if not set it\n        if (!state.totalProducts) {\n          state.totalProducts = action.payload.totalProducts;\n        }\n      })\n\n      .addCase(getHeroes.rejected, handleRejected);\n  },\n});\n\nexport const { clearItems } = heroesSlice.actions;\nexport const heroesReducer = heroesSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,cAAc;AAExC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/BA,KAAK,CAACC,QAAQ,GAAG,EAAE;EACnBD,KAAK,CAACE,SAAS,GAAG,IAAI;AACxB,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACH,KAAK,EAAEI,MAAM,KAAK;EACxCJ,KAAK,CAACE,SAAS,GAAG,KAAK;EACvBF,KAAK,CAACK,KAAK,GAAGD,MAAM,CAACE,OAAO;AAC9B,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE,IAAI;EACnBP,SAAS,EAAE,KAAK;EAChBG,KAAK,EAAE;AACT,CAAC;AAED,MAAMK,WAAW,GAAGb,WAAW,CAAC;EAC9Bc,IAAI,EAAE,QAAQ;EACdJ,YAAY;EACZK,QAAQ,EAAE;IACRC,UAAU,EAAGb,KAAK,IAAK;MACrBA,KAAK,CAACQ,KAAK,GAAG,EAAE;IAClB;EACF,CAAC;EACDM,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAClB,SAAS,CAACmB,OAAO,EAAElB,aAAa,CAAC,CACzCiB,OAAO,CAAClB,SAAS,CAACoB,SAAS,EAAE,CAAClB,KAAK,EAAEI,MAAM,KAAK;MAC/CJ,KAAK,CAACE,SAAS,GAAG,KAAK;MACvBF,KAAK,CAACK,KAAK,GAAG,IAAI;MAClBL,KAAK,CAACQ,KAAK,GAAG,CAAC,GAAGR,KAAK,CAACQ,KAAK,EAAE,GAAGJ,MAAM,CAACE,OAAO,CAACL,QAAQ,CAAC;MAC1D;MACA,IAAI,CAACD,KAAK,CAACS,aAAa,EAAE;QACxBT,KAAK,CAACS,aAAa,GAAGL,MAAM,CAACE,OAAO,CAACG,aAAa;MACpD;IACF,CAAC,CAAC,CAEDO,OAAO,CAAClB,SAAS,CAACqB,QAAQ,EAAEhB,cAAc,CAAC;EAChD;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEU;AAAW,CAAC,GAAGH,WAAW,CAACU,OAAO;AACjD,OAAO,MAAMC,aAAa,GAAGX,WAAW,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}